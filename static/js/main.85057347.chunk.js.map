{"version":3,"sources":["components/Navigation.js","fBase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["Navigation","userObj","style","display","justifyContent","marginTop","to","marginRight","icon","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","displayName","process","firebaseConfig","apiKey","REACT_APP_API_KEY","authDomain","REACT_APP_AUTH_DOMAIN","projectId","REACT_APP_PROJECT_ID","storageBucket","REACT_APP_STORAGE_BUCKET","messagingSenderId","REACT_APP_MESSAGING_SENDER_ID","appId","REACT_APP_APP_ID","firebaseApp","initializeApp","storage","getStorage","auth","getAuth","dbService","getFirestore","deleteNweet","deleteDoc","docNweet","doc","updateNweet","updateDoc","addNweet","addDoc","realtimeNweet","onSnapshot","collec","collection","join","createUserWithEmailAndPassword","login","signInWithEmailAndPassword","AuthForm","useState","email","password","error","form","setForm","newAccount","setNewAccount","onChange","target","name","value","onSubmit","e","a","preventDefault","fAuth","message","className","type","placeholder","required","onClick","prev","Auth","isLoggedIn","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteObject","ref","attachmentUrl","id","toggleEditing","autoFocus","src","alt","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","fileRef","uid","uuidv4","uploadString","getDownloadURL","createdAt","Date","now","creatorId","docRef","console","log","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","result","currentTarget","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","realNweet","nweetArray","docs","map","data","Profile","refreshUser","newDisplayName","setDisplayName","photoURL","setPhotoURL","history","useHistory","getMyNweets","queryNwts","query","where","orderBy","getDocs","updateProfile","onClearPhoto","profile","signOut","push","AppRouter","maxWidth","width","margin","exact","path","App","init","setInit","setIsLoggedIn","setUserObj","onAuthStateChanged","user","currentUser","Object","assign","getFullYear","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85057347.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({ userObj }) => (\n  <nav>\n    <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n      <li>\n        <Link to=\"/\" style={{ marginRight: 10 }}>\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n        </Link>\n      </li>\n      <li>\n        <Link\n          to=\"/profile\"\n          style={{\n            marginLeft: 10,\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignItems: \"center\",\n            fontSize: 12,\n          }}\n        >\n          <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n          <span style={{ marginTop: 10 }}>\n            {userObj.displayName\n              ? `${userObj.displayName}의 Profile`\n              : \"Profile\"}\n          </span>\n        </Link>\n      </li>\n    </ul>\n  </nav>\n);\nexport default Navigation;\n","import { initializeApp } from \"firebase/app\";\nimport { getStorage } from \"firebase/storage\";\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n} from \"firebase/auth\";\nimport {\n  getFirestore,\n  deleteDoc,\n  doc,\n  updateDoc,\n  addDoc,\n  onSnapshot,\n  collection,\n} from \"firebase/firestore\";\n\nconst {\n  REACT_APP_API_KEY,\n  REACT_APP_AUTH_DOMAIN,\n  REACT_APP_PROJECT_ID,\n  REACT_APP_STORAGE_BUCKET,\n  REACT_APP_MESSAGING_SENDER_ID,\n  REACT_APP_APP_ID,\n} = process.env;\nconst firebaseConfig = {\n  apiKey: REACT_APP_API_KEY,\n  authDomain: REACT_APP_AUTH_DOMAIN,\n  projectId: REACT_APP_PROJECT_ID,\n  storageBucket: REACT_APP_STORAGE_BUCKET,\n  messagingSenderId: REACT_APP_MESSAGING_SENDER_ID,\n  appId: REACT_APP_APP_ID,\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\nexport const storage = getStorage(firebaseApp);\nexport const auth = getAuth();\nexport const dbService = getFirestore();\n\nexport const deleteNweet = deleteDoc;\nexport const docNweet = doc;\nexport const updateNweet = updateDoc;\nexport const addNweet = addDoc;\nexport const realtimeNweet = onSnapshot;\nexport const collec = collection;\n\nexport const join = createUserWithEmailAndPassword;\nexport const login = signInWithEmailAndPassword;\n","import React, { useState } from \"react\";\nimport { auth as fAuth, join, login } from \"fBase\";\nconst AuthForm = () => {\n  const [form, setForm] = useState({ email: \"\", password: \"\", error: \"\" });\n  const [newAccount, setNewAccount] = useState(false);\n  const onChange = ({ target: { name, value } }) =>\n    setForm({ ...form, [name]: value });\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      if (newAccount) await join(fAuth, form.email, form.password);\n      if (!newAccount) await login(fAuth, form.email, form.password);\n    } catch (error) {\n      setForm({ error: error.message });\n    }\n  };\n  const toggleAccount = () => setNewAccount((prev) => !prev);\n  return (\n    <>\n      <form onSubmit={onSubmit} className=\"container\">\n        <input\n          name=\"email\"\n          type=\"text\"\n          placeholder=\"Email\"\n          required\n          value={form.email}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          name=\"password\"\n          type=\"password\"\n          placeholder=\"Password\"\n          required\n          value={form.password}\n          onChange={onChange}\n          className=\"authInput\"\n        />\n        <input\n          type=\"submit\"\n          className=\"authInput authSubmit\"\n          value={newAccount ? \"Create New Account \" : \"Log in\"}\n        />\n        {form.error && <span className=\"authError\">{form.error}</span>}\n      </form>\n      <span onClick={toggleAccount} className=\"authSwitch\">\n        {newAccount ? \"Log in\" : \"Create Account\"}\n      </span>\n    </>\n  );\n};\nexport default AuthForm;\n","import React from \"react\";\nimport { auth as fAuth } from \"fBase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTwitter,\n  faGoogle,\n  faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport {\n  GithubAuthProvider,\n  GoogleAuthProvider,\n  signInWithPopup,\n} from \"firebase/auth\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = ({ isLoggedIn }) => {\n  const onSocialClick = async ({ target: { name } }) => {\n    let provider;\n    if (name === \"google\") provider = new GoogleAuthProvider();\n    if (name === \"github\") provider = new GithubAuthProvider();\n    await signInWithPopup(fAuth, provider);\n  };\n  return (\n    <div className=\"authContainer\">\n      <FontAwesomeIcon\n        icon={faTwitter}\n        color={\"#04AAFF\"}\n        size=\"3x\"\n        style={{ marginBottom: 30 }}\n      />\n      <AuthForm />\n      <div className=\"authBtns\">\n        <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n          Continue with Google <FontAwesomeIcon icon={faGoogle} />\n        </button>\n        <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n          Continue with Github <FontAwesomeIcon icon={faGithub} />\n        </button>\n      </div>\n    </div>\n  );\n};\nexport default Auth;\n","import { dbService, deleteNweet, docNweet, storage, updateNweet } from \"fBase\";\nimport React, { useState } from \"react\";\nimport { deleteObject, ref } from \"@firebase/storage\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n  const [editing, setEditing] = useState(false);\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\n  const onDeleteClick = async () => {\n    const ok = window.confirm(\"Are you sure you want to delete this nweet?\");\n    if (ok) {\n      // delete nweet\n      await deleteObject(ref(storage, nweetObj.attachmentUrl));\n      await deleteNweet(docNweet(dbService, `nweets/${nweetObj.id}`));\n    }\n  };\n  const toggleEditing = () => setEditing((prev) => !prev);\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    await updateNweet(docNweet(dbService, `nweets/${nweetObj.id}`), {\n      text: newNweet,\n    });\n    setEditing(false);\n  };\n  const onChange = ({ target: { value } }) => {\n    setNewNweet(value);\n  };\n  return (\n    <div className=\"nweet\">\n      {editing ? (\n        <>\n          <form onSubmit={onSubmit} className=\"container nweetEdit\">\n            <input\n              type=\"text\"\n              placeholder=\"Edit your Nweet\"\n              value={newNweet}\n              required\n              onChange={onChange}\n              autoFocus\n              className=\"formInput\"\n            />\n            <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n          </form>\n          <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\n            Cancel\n          </span>\n        </>\n      ) : (\n        <>\n          <h4>{nweetObj.text}</h4>\n          {nweetObj.attachmentUrl && (\n            <img src={nweetObj.attachmentUrl} alt=\"\" />\n          )}\n          {isOwner && (\n            <div className=\"nweet__actions\">\n              <span onClick={onDeleteClick}>\n                <FontAwesomeIcon icon={faTrash} />\n              </span>\n              <span onClick={toggleEditing}>\n                <FontAwesomeIcon icon={faPencilAlt} />\n              </span>\n            </div>\n          )}\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Nweet;\n","import React, { useState } from \"react\";\nimport { dbService, addNweet, collec, storage } from \"fBase\";\nimport { ref, uploadString, getDownloadURL } from \"@firebase/storage\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nconst NweetFactory = ({ userObj }) => {\n  const [nweet, setNweet] = useState(\"\");\n  const [attachment, setAttachment] = useState(\"\");\n  const onSubmit = async (e) => {\n    if (nweet === \"\") {\n      return;\n    }\n    e.preventDefault();\n    let attachmentUrl = \"\";\n    const fileRef = ref(storage, `${userObj.uid}/${uuidv4()}`);\n    if (attachment !== \"\") {\n      // Data URL string\n      await uploadString(fileRef, attachment, \"data_url\");\n      // Dawon file URL\n      attachmentUrl = await getDownloadURL(fileRef);\n    }\n    const nweetObj = {\n      text: nweet,\n      createdAt: Date.now(),\n      creatorId: userObj.uid,\n      attachmentUrl,\n    };\n    try {\n      const docRef = await addNweet(collec(dbService, \"nweets\"), nweetObj);\n      console.log(\"Document written with ID: \", docRef.id);\n    } catch (error) {\n      console.error(\"Error adding document: \", error);\n    }\n    setNweet(\"\");\n    setAttachment(\"\");\n  };\n  const onChange = ({ target: { value } }) => {\n    setNweet(value);\n  };\n  const onFileChange = ({ target: { files } }) => {\n    const theFile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = ({ currentTarget: { result } }) => {\n      setAttachment(result);\n    };\n    reader.readAsDataURL(theFile);\n  };\n\n  const onClearAttachment = () => setAttachment(\"\");\n  return (\n    <form onSubmit={onSubmit} className=\"factoryForm\">\n      <div className=\"factoryInput__container\">\n        <input\n          className=\"factoryInput__input\"\n          value={nweet}\n          onChange={onChange}\n          type=\"text\"\n          placeholder=\"What's on your mind?\"\n          maxLength={120}\n        />\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n      </div>\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n        <span>Add photos</span>\n        <FontAwesomeIcon icon={faPlus} />\n      </label>\n      <input\n        id=\"attach-file\"\n        type=\"file\"\n        accept=\"image/*\"\n        onChange={onFileChange}\n        style={{\n          opacity: 0,\n        }}\n      />\n      {attachment && (\n        <div className=\"factoryForm__attachment\">\n          <img\n            src={attachment}\n            style={{\n              backgroundImage: attachment,\n            }}\n            alt=\"\"\n          />\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n            <span className=\"clear\">Remove</span>\n            <FontAwesomeIcon icon={faTimes} />\n          </div>\n        </div>\n      )}\n    </form>\n  );\n};\n\nexport default NweetFactory;\n","import { dbService, realtimeNweet, collec } from \"fBase\";\nimport React, { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nconst Home = ({ userObj }) => {\n  const [nweets, setNweets] = useState([]);\n\n  // const getNweets = async () => {\n  //   const dbNweets = await getDocs(collection(dbService, \"nweets\"));\n  //   dbNweets.forEach((doc) => {\n  //     const nweetObj = {\n  //       ...doc.data(),\n  //       id: doc.id,\n  //     };\n  //     setNweets((prev) => [nweetObj, ...prev]);\n  //   });\n  // };\n  useEffect(() => {\n    // getNweets(); ForEach 쓰는 방법\n    realtimeNweet(collec(dbService, \"nweets\"), (realNweet) => {\n      const nweetArray = realNweet.docs.map((doc) => ({\n        id: doc.id,\n        ...doc.data(),\n      }));\n      setNweets(nweetArray); // map\n    });\n  }, []);\n  return (\n    <div className=\"container\">\n      <NweetFactory userObj={userObj} />\n      <div style={{ marginTop: 30 }}>\n        {nweets.map((nweet) => (\n          <Nweet\n            key={nweet.id}\n            nweetObj={nweet}\n            isOwner={nweet.creatorId === userObj.uid}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","import { updateProfile } from \"@firebase/auth\";\nimport { getDocs, orderBy, query, where } from \"@firebase/firestore\";\nimport { auth as fAuth, collec, dbService } from \"fBase\";\nimport React, { useEffect, useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\nconst Profile = ({ refreshUser, userObj }) => {\n  const [newDisplayName, setDisplayName] = useState(userObj.displayName);\n  const [photoURL, setPhotoURL] = useState(\"\");\n  const history = useHistory();\n  const onLogOutClick = () => {\n    fAuth.signOut();\n    history.push(\"/\");\n  };\n  const getMyNweets = async () => {\n    const queryNwts = query(\n      collec(dbService, \"nweets\"),\n      where(\"creatorId\", \"==\", userObj.uid),\n      orderBy(\"createdAt\", \"desc\")\n    );\n    await getDocs(queryNwts);\n  };\n\n  const onChange = ({ target: { value } }) => {\n    setDisplayName(value);\n  };\n  const onSubmit = async (e) => {\n    e.preventDefault();\n    if (userObj.displayName !== newDisplayName) {\n      await updateProfile(userObj, {\n        displayName: newDisplayName,\n        photoURL: userObj.photoURL,\n      });\n      refreshUser();\n    }\n  };\n\n  const onProfileChange = ({ target: { files } }) => {\n    const profile = files[0];\n    const reader = new FileReader();\n    reader.onloadend = ({ currentTarget: { result } }) => {\n      setPhotoURL(result);\n    };\n    reader.readAsDataURL(profile);\n  };\n\n  useEffect(() => {\n    getMyNweets();\n  }, []);\n  const onClearPhoto = () => setPhotoURL(null);\n  return (\n    <div className=\"container\">\n      <form onSubmit={onSubmit} className=\"profileForm\">\n        <>\n          <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n            <span>Add photos</span>\n            <FontAwesomeIcon icon={faPlus} />\n          </label>\n          <input\n            id=\"attach-file\"\n            type=\"file\"\n            accept=\"image/profile/*\"\n            onChange={onProfileChange}\n            style={{\n              opacity: 0,\n            }}\n          />\n          {photoURL ? (\n            <>\n              <img\n                src={photoURL}\n                style={{\n                  backgroundImage: photoURL,\n                }}\n                alt=\"\"\n              />\n              <div className=\"factoryForm__clear\" onClick={onClearPhoto}>\n                <span className=\"clear\">Remove</span>\n                <FontAwesomeIcon icon={faTimes} />\n              </div>\n            </>\n          ) : (\n            userObj.photoURL && (\n              <>\n                <img\n                  src={userObj.photoURL}\n                  style={{\n                    backgroundImage: userObj.photoURL,\n                  }}\n                  alt=\"\"\n                />\n                <div className=\"factoryForm__clear\" onClick={onClearPhoto}>\n                  <span className=\"clear\">Remove</span>\n                  <FontAwesomeIcon icon={faTimes} />\n                </div>\n              </>\n            )\n          )}\n        </>\n        <>\n          <input\n            type=\"text\"\n            placeholder=\"Display name\"\n            value={newDisplayName}\n            onChange={onChange}\n            className=\"formInput\"\n            autoFocus\n          />\n          <input\n            type=\"submit\"\n            value=\"Update Profile\"\n            className=\"formBtn\"\n            style={{\n              marginTop: 10,\n            }}\n          />\n        </>\n      </form>\n      <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n        Log Out\n      </span>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React from \"react\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navigation from \"components/Navigation\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\n  return (\n    <Router>\n      {isLoggedIn && <Navigation userObj={userObj} />}\n      <Switch>\n        {isLoggedIn ? (\n          <div\n            style={{\n              maxWidth: 890,\n              width: \"100%\",\n              margin: \"0 auto\",\n              marginTop: 80,\n              display: \"flex\",\n              justifyContent: \"center\",\n            }}\n          >\n            <Route exact path=\"/\">\n              <Home userObj={userObj} />\n            </Route>\n            <Route exact path=\"/profile\">\n              <Profile userObj={userObj} refreshUser={refreshUser} />\n            </Route>\n          </div>\n        ) : (\n          <>\n            <Route exact path=\"/\">\n              <Auth />\n            </Route>\n          </>\n        )}\n      </Switch>\n    </Router>\n  );\n};\nexport default AppRouter;\n","import React, { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { auth } from \"fBase\";\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  useEffect(() => {\n    auth.onAuthStateChanged((user) => {\n      if (user) {\n        setIsLoggedIn(true);\n        setUserObj(user);\n      }\n      if (!user) setIsLoggedIn(false);\n      setInit(true);\n    });\n  }, []);\n  const refreshUser = () => {\n    const user = auth.currentUser;\n    setUserObj(Object.assign({}, user));\n  };\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={isLoggedIn}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initialiazing....!\"\n      )}\n      <footer>&copy; {new Date().getFullYear()} Nwitter</footer>\n    </>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"./styles.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}